stages:
  - build
  - release
  - scan

services:
  - docker:24.0.5-dind

# # This will be introduced later
# # It generates a vulnerability report based on a container image
# include:
#   - template: Security/Container-Scanning.gitlab-ci.yml

# generate-vulnreport:
#   stage: scan
#   variables:
#     CS_ANALYZER_IMAGE: registry.gitlab.com/security-products/container-scanning/grype:4

check-server:
  stage: build
  image: rust:1.85.0-slim-bullseye
  script:
    - cargo check
  rules:
    # if  pushing to main or a branch with open mr onto main and ci is tagged
    - if: $CI_COMMIT_TAG == "ci" && ($CI_COMMIT_BRANCH == "main" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main")

build-server:
  stage: build
  image: rust:1.85.0-slim-bullseye
  script:
    - cargo build
  cache:
    - key: "cached-build-$CI_COMMIT_TAG"
      paths:
        - target/
  needs:
    - check-server

build-server-container:
  stage: build
  image: docker:24.0.5-dind
  script:
    - docker build -t rocket-forum:$CI_COMMIT_SHORT_SHA .
  rules:
    # if  pushing to main or a branch with open mr onto main and ci is tagged
    - if: $CI_COMMIT_TAG == "ci" && ($CI_COMMIT_BRANCH == "main" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main")
  cache:
    - key: "cached-build-$CI_COMMIT_TAG"
      paths:
        - target/
